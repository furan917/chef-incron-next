name: Cookbook RSpec

env:
  CHEF_LICENSE: accept-no-persist

on:
  workflow_call:
    inputs:
      cinc_version:
        type: string
        description: 'Cinc workstation version to use'
        default: 'latest'

jobs:
  rspec:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Install Cinc Workstation
        uses: ./.github/actions/install-cinc
        with:
          cinc_version: ${{ inputs.cinc_version }}

      - name: Install required Gems to begin setup
        run: |
          cinc exec gem cleanup stringio
          cinc exec gem install berkshelf -v 8.0.9

      - name: Install cookbook dependencies
        run: cinc exec berks install

      - name: Get Gemfile if it exists
        run: |
          if [ -f Gemfile ]; then
            echo "BUNDLE_GEMFILE=Gemfile" >> $GITHUB_ENV
          fi

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems from Gemfile
        run: |
          if [ -n "${{ env.BUNDLE_GEMFILE }}" ]; then
            BUNDLE_GEMFILE=${{ env.BUNDLE_GEMFILE }} cinc exec bundle install --path vendor/bundle
          fi

      - name: Create rspec report tmp directory
        run: mkdir -p tmp/json-reports

      - name: Run RSpec
        run: |
          if [ -n "${{ env.BUNDLE_GEMFILE }}" ]; then
            BUNDLE_GEMFILE=${{ env.BUNDLE_GEMFILE }} cinc exec bundle exec rspec --format json --out tmp/json-reports/rspec_results.json spec
          else
            cinc exec rspec --format json --out tmp/json-reports/rspec_results.json spec
          fi

      - name: RSpec Report
        uses: SonicGarden/rspec-report-action@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          json-path: tmp/json-reports/rspec_results.json
        if: always()
